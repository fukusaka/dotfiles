#!/bin/zsh
# -*-shell-script-*-

if [ -f ${HOME}/.debug_aliases ]; then
        msg() { echo "$@"; }
else
        msg() { return; }
fi

echo "# my alias definitions" > ~/.zsh_aliases
out() { echo "$@" >> ~/.zsh_aliases; }

typeset -A findCmd
typeset -A aliasCmd

# 検索するコマンドのリスト
typeset -a GNUCMDS=(dircolors ls grep egrep fgrep)
typeset -a CMDS=(vim groff java)

# gnu 系はプリフィックが付く場合がある
gnuprefix="g"

check_path() {
        cmd=$1
        cmdpath=$2
        if [ -x $cmdpath -a -z "$findCmd[$cmd]" ]; then
                msg "find $cmd -> $cmdpath"
                findCmd[$cmd]=$cmdpath
        fi
}

# パス検索
paths="$PATH:"
while [ -n "$paths" ]; do
        dir=${paths%%:*}
        paths=${paths#*:}
        for cmd in $CMDS; do
                check_path $cmd ${dir}/${cmd}
        done
        for cmd in $GNUCMDS; do
                check_path $cmd ${dir}/${gnuprefix}${cmd}
                check_path $cmd ${dir}/${cmd}
        done
done
unset paths dir cmd cmdpath
unset gnuprefix CMDS GNUCMDS check_path

## check GNU coreutils
ls_type=$(uname -s)
$findCmd[ls] --color &> /dev/null && ls_type=gnu

## check GNU grep --color
echo 1 | $findCmd[grep] -q --color 1 &> /dev/null && grep_type=color

msg "ls_type $ls_type"
msg "grep_type $grep_type"

# 端末に色づけられる場合
out "alias_ls=\"$findCmd[ls] -F\""
out 'if [ -z "$terminal_type" ] && [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then'
out '        terminal_type=color'
out 'fi'
out 'if [ "$terminal_type" = color ]; then'

if [ -n "$findCmd[dircolors]" ]; then
        msg "execute $findCmd[dircolors]"
        out "  eval \`$findCmd[dircolors] -b\`"
fi

# for colorized ls
case $ls_type in
gnu)
        out "        alias_ls=\"\$alias_ls --color=auto\""
        ;;
FreeBSD|NetBSD|OpenBSD|Darwin)
        out "        alias_ls=\"\$alias_ls -G\""
        ;;
*)
        ;;
esac

# colorized grep
if [ "$grep_type" = color ]; then
        out "        alias grep=\"$findCmd[grep] --color=auto\""
        out "        alias fgrep=\"$findCmd[fgrep] --color=auto\""
        out "        alias egrep=\"$findCmd[egrep] --color=auto\""
fi

out 'fi'

# 時刻の詳細表示
case $ls_type in
gnu)
        if $findCmd[ls] --time-style=+%F\ %T &> /dev/null; then
                aliasCmd[ll]="\$alias_ls -l --time-style=+%F\ %T"
        else
                aliasCmd[ll]="\$alias_ls -l --full-time"
        fi
        ;;
FreeBSD|NetBSD|OpenBSD|Darwin)
        aliasCmd[ll]="\$alias_ls -l -T"
        ;;
SunOS)
        aliasCmd[ll]="\$alias_ls -e"
        ;;
esac

aliasCmd[ls]="\$alias_ls -C"
aliasCmd[l]="\$alias_ls -l"
aliasCmd[la]="\$alias_ls -A -C"

unset ls_type grep_type

# その他のエイリアス

# use vim
[ -n "$findCmd[vim]" ] && aliasCmd[vi]=$findCmd[vim]

# use less of vim
#for dir in /usr/share /usr/local/share; do
#        for cmd in $dir/vim/vim*/macros/less.sh; do
#                if [ -x $cmd ]; then
#                        aliasCmd[less]=$cmd
#                        break 2
#                fi
#        done
#done

# 日本語 man の 不良解消
if [ -n "$findCmd[groff]" ]; then
        # MacOSX の man は常にCロケールにする
        if [ $(uname -s) = Darwin ]; then
                aliasCmd[man]='LANG=C man'
        # man がCロケール以外でエラーが発生 (Cygwin のみ)
        elif [ $(man man 2> /dev/null | wc -c) -le  0 ]; then
                aliasCmd[man]='LANG=C man'
        fi
fi

# Java 関連で端末出力を UTF-8 にする
JCMDS=(javac keytool)
if [ -n "$findCmd[java]" -a -f "${HOME}/common/java/ShowEncoding.class" ]; then
        encoding=$($findCmd[java] -classpath ~/common/java ShowEncoding | sed -n '/file.encoding: \(.*\)/s//\1/p')
        msg "java file.encoding -> $encoding"

        if [ "x$encoding" != "xUTF-8" ]; then
                for cmd in $JCMDS; do
                        aliasCmd[$cmd]="\\$cmd -J-Dfile.encoding=UTF-8"
                done
        fi
        unset encoding
fi
unset JCMDS

## 変数 alias_xx を alias定義に変換
for cmd in ${(k)aliasCmd}; do
        alias_cmd=$aliasCmd[$cmd]
        msg "alias $cmd -> $alias_cmd"
        out "alias $cmd=\"$alias_cmd\""
done
out "unset alias_ls"

unset findCmd aliasCmd
unset cmd alias_cmd dir msg out
