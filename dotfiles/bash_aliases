#!/bin/sh -*-shell-script-*-

if [ -f ${HOME}/.debug_aliases ]; then
    msg() { echo "$@"; }
else
    msg() { return; }
fi

GNUCMDS="dircolors ls grep egrep fgrep"
CMDS="vim groff"

# パス検索
for cmd in $GNUCMDS; do
    for prefix in g ""; do
	cmdpath="$(type -p ${prefix}$cmd)"
	if [ -x "$cmdpath" ]; then
	    msg "find $cmd -> $cmdpath"
	    eval "find_$cmd=$cmdpath"
	    break
	fi
    done
done
for cmd in $CMDS; do
    cmdpath="$(type -p $cmd)"
    msg "find $cmd -> $cmdpath"
    eval "find_$cmd=$cmdpath"
done
unset prefix cmdpath CMDS GNUCMDS

if [ -n "$find_dircolors" ]; then
    msg "execute $find_dircolors"
    eval "`$find_dircolors -b`"
fi

# check GNU coreutils
ls_type=$(uname -s)
$find_ls --version 2>&1 | $find_grep GNU &> /dev/null && ls_type=gnu

# check GNU grep
$find_grep --version 2>&1 | $find_grep GNU &> /dev/null && grep_type=gnu

##
# for colorized ls
alias_ls="$find_ls -F"
case $ls_type in
    gnu)
	if [ "$terminal_type" = color ]; then
	    alias_ls="$alias_ls --color=auto"
	fi
	#alias_ll="$alias_ls -l --full-time"
	alias_ll="$alias_ls -l --time-style=+%F\ %T"
	;;
    FreeBSD|NetBSD|OpenBSD|Darwin)
	if [ "$terminal_type" = color ]; then
	    alias_ls="$alias_ls -G"
	fi
	alias_ll="$alias_ls -l -T"
	;;
    SunOS)
	alias_ll="$alias_ls -e"
	;;
esac
alias_l="$alias_ls -l"
alias_la="$alias_ls -A"
msg "ls_type $ls_type"
unset ls_type

# colorized grep
if [ "$terminal_type" = color -a "$grep_type" = gnu ]; then
    alias_grep="$find_grep --color=auto"
    alias_fgrep="$find_fgrep --color=auto"
    alias_egrep="$find_egrep --color=auto"
fi
msg "grep_type $grep_type"
unset grep_type

# use vim
[ -n "$find_vim" ] && alias_vi=$find_vim

# use less of vim
for dir in /usr/share /usr/local/share; do
    for cmd in $dir/vim/vim*/macros/less.sh; do
	if [ -x $cmd ]; then
	    alias_less=$cmd
	    break 2
	fi
    done
done

# 日本語 man の 不良解消
if [ -n "$find_groff" ]; then
    # MacOSX の man は常にCロケールにする
    if [ $(uname -s) = Darwin ]; then
	alias_man='LANG=C man'
    # man がCロケール以外でエラーが発生 (Cygwin のみ)
    elif [ $(man man 2> /dev/null | wc -c) -le  0 ]; then
	alias_man='LANG=C man'
    fi
fi


# 実際の alias 定義
for pfind_cmd in ${!alias_*}; do
    cmd=${pfind_cmd#alias_}
    alias_cmd="$(eval echo \$$pfind_cmd)"
    msg "alias $cmd -> $alias_cmd"
    alias "$cmd=$alias_cmd"
done
unset ${!find_*} ${!alias_*}
unset pfind_cmd cmd alias_cmd dir msg
