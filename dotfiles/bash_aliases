#!/bin/sh -*-shell-script-*-

msg() {
    [ "$debug_aliases" != yes ] && return
    echo "$@"
}

GNUCMDS="dircolors ls grep egrep fgrep"
CMDS="vim"

# パス検索
for cmd in $GNUCMDS; do
    for prefix in g ""; do
	for dir in ${PATH//:/ }; do
	    cmdpath="$dir/${prefix}$cmd"
	    if [ -x "$cmdpath" ]; then
		msg "find $cmd -> $cmdpath"
		eval "find_$cmd=$cmdpath"
		break 2
	    fi
	done
    done
done
for cmd in $CMDS; do
    cmdpath="$(which $cmd)"
    msg "find $cmd -> $cmdpath"
    eval "find_$cmd=$cmdpath"
done
unset prefix cmdpath CMDS GNUCMDS

if [ -n "$find_dircolors" ]; then
    msg "execute $find_dircolors"
    eval "`$find_dircolors -b`"
fi

# check GNU coreutils
ls_type=$(uname -s)
$find_ls --version 2>&1 | $find_grep GNU &> /dev/null && ls_type=gnu

# check GNU grep
$find_grep --version 2>&1 | $find_grep GNU &> /dev/null && grep_type=gnu

##
# for colorized ls
find_ls="$find_ls -F"
case $ls_type in
    gnu)
	if [ "$terminal_type" = color ]; then
	    find_ls="$find_ls --color=auto"
	fi
	#alias_ll="$find_ls -l --full-time"
	alias_ll="$find_ls -l --time-style=+%F\ %T"
	;;
    FreeBSD|NetBSD|OpenBSD|Darwin)
	if [ "$terminal_type" = color ]; then
	    find_ls="$find_ls -G"
	fi
	alias_ll="$find_ls -l -T"
	;;
    SunOS)
	alias_ll="$find_ls -e"
	;;
esac
alias_l="$find_ls -l"
alias_la="$find_ls -A"
msg "ls_type $ls_type"
unset ls_type

# colorized grep
if [ "$terminal_type" = color -a "$grep_type" = gnu ]; then
    find_grep="$find_grep --color=auto"
    find_fgrep="$find_fgrep --color=auto"
    find_egrep="$find_egrep --color=auto"
fi
msg "grep_type $grep_type"
unset grep_type

# use vim
alias_vi=$find_vim

# use less of vim
for dir in /usr/share /usr/local/share; do
    for cmd in $dir/vim/vim*/macros/less.sh; do
	if [ -x $cmd ]; then
	    alias_less=$cmd
	fi
    done
done

# 実際の alias 定義
for pfind_cmd in ${!find_*}; do
    cmd=${pfind_cmd#find_}
    find_cmd="$(eval echo \$$pfind_cmd)"
    if [ "$(which $cmd)" != "$find_cmd" ]; then
	msg "alias $cmd -> $find_cmd"
	alias "$cmd=$find_cmd"
    else
	msg "not alias $cmd"
    fi
done
for pfind_cmd in ${!alias_*}; do
    cmd=${pfind_cmd#alias_}
    find_cmd="$(eval echo \$$pfind_cmd)"
    msg "alias $cmd -> $find_cmd"
    alias "$cmd=$find_cmd"
done
unset ${!find_*} ${!alias_*}
unset pfind_cmd cmd find_cmd dir msg
