- hosts: localhost
  connection: local
  become: no

  tasks:
     - block:
       - name: add unbound grroup
         become: yes
         group: name=unbound system=yes state=present

       - name: add unbound user
         become: yes
         user: name=unbound group=unbound home=/var/empty createhome=no shell=/usr/bin/false comment="Unbound Server"

       - name: install unbound
         homebrew: name=unbound

       - name: unbound config file
         copy: src=files/unbound-real.conf dest=/usr/local/etc/unbound/unbound.conf
         notify: reload unbound

       - name: create unbound control key
         command: unbound-control-setup creates=/usr/local/etc/unbound/unbound_control.key

       - name: unbound launch config file
         become: yes
         copy: src=files/homebrew.mxcl.unbound.plist dest=/Library/LaunchDaemons/homebrew.mxcl.unbound.plist
         notify:
           - unload unbound
           - load unbound
       tags: ['unbound']

     - block:
       - name: add nsd group
         become: yes
         group: name=nsd system=yes state=present

       - name: add nsd user
         become: yes
         user: name=nsd group=nsd home=/var/empty createhome=no shell=/usr/bin/false comment="NSD Server"

       - name: install nsd
         homebrew: name=nsd

       - name: nsd config file
         copy: src=files/nsd-real.conf dest=/usr/local/etc/nsd/nsd.conf
         notify: reload nsd

       - name: create nsd control key
         command: nsd-control-setup creates=/usr/local/etc/nsd/nsd_control.key

       - name: nsd launch config file
         become: yes
         copy: src=files/homebrew.mxcl.nsd.plist dest=/Library/LaunchDaemons/homebrew.mxcl.nsd.plist
         notify:
           - unload nsd
           - load nsd
       tags: ['nsd']

     - block:
       - name: add nginx grroup
         become: yes
         group: name=nginx system=yes state=present

       - name: add nginx user
         become: yes
         user: name=nginx group=nginx home=/var/empty createhome=no shell=/usr/bin/false comment="nginx Web Server"

       - name: install nginx
         homebrew: name=nginx

       - name: nginx config file
         copy: src=files/nginx/nginx.conf dest=/usr/local/etc/nginx/nginx.conf
         notify: reload nginx

       - file: path=/usr/local/var/run/nginx state=directory owner=nsd group=admin
         become: yes

       - file: path=/usr/local/etc/nginx/vhosts state=directory
       - copy: src=files/nginx/vhosts/vhosts.conf dest=/usr/local/etc/nginx/vhosts/vhosts.conf.default
       - command: cp /usr/local/etc/nginx/vhosts/vhosts.conf.default /usr/local/etc/nginx/vhosts/vhosts.conf creates=/usr/local/etc/nginx/vhosts/vhosts.conf
         notify: reload nginx
       - copy: src=files/nginx/vhosts/default.conf dest=/usr/local/etc/nginx/vhosts/default.conf
         notify: reload nginx

       - name: nginx launch config file
         become: yes
         copy: src=files/homebrew.mxcl.nginx.plist dest=/Library/LaunchDaemons/homebrew.mxcl.nginx.plist
         notify:
           - unload nginx
           - load nginx
           - wait for nginx
       tags: ['nginx']

  handlers:
   - name: unload unbound
     become: yes
     command: launchctl unload -w /Library/LaunchDaemons/homebrew.mxcl.unbound.plist
   - name: load unbound
     become: yes
     command: launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.unbound.plist
   - name: reload unbound
     become: yes
     command: unbound-control reload
   - name: unload nsd
     become: yes
     command: launchctl unload -w /Library/LaunchDaemons/homebrew.mxcl.nsd.plist
   - name: load nsd
     become: yes
     command: launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.nsd.plist
   - name: reload nsd
     become: yes
     command: nsd-control reload
   - name: unload nginx
     become: yes
     command: launchctl unload -w /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
   - name: load nginx
     become: yes
     command: launchctl load -w /Library/LaunchDaemons/homebrew.mxcl.nginx.plist
   - name: wait for nginx
     wait_for: host=127.0.0.1 port=80 state=started delay=5
   - name: reload nginx
     become: yes
     command: nginx -s reload
